{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Bienvenu(e)"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"example/","text":"Full example from sanic import Sanic from sanic.response import json from sanic_camelcase_middleware import Camelize app = Sanic(__name__) Camelize(app) @app.route(\"/post\", methods=[\"POST\"]) async def test(request): return json(\"is_camelcase\": True, \"message\": request.json}) if __name__ == \"__main__\": app.run(host=\"0.0.0.0\", port=8000)","title":"Example"},{"location":"example/#full-example","text":"from sanic import Sanic from sanic.response import json from sanic_camelcase_middleware import Camelize app = Sanic(__name__) Camelize(app) @app.route(\"/post\", methods=[\"POST\"]) async def test(request): return json(\"is_camelcase\": True, \"message\": request.json}) if __name__ == \"__main__\": app.run(host=\"0.0.0.0\", port=8000)","title":"Full example"},{"location":"in/installing-smile/","text":"Installing Smile CDR Smile CDR can be deployed to a server as an application by extracting the Smile CDR application archive file or as a Docker service by importing the Smile CDR Docker image. Once deployed, the initial installation of Smile CDR should be as simple as editing the configuration file and starting the software. We believe that software should be easy to configure, and should come with sane configuration out-of-the-box. The following sections will provide a general overview of the basic installation process along with details for deploying Smile CDR as an application. Additional details about deploying Smile CDR as a Docker service are available at this page. Installing to Linux / OSX The following instructions will focus on deploying the software in a Linux/OSX environment. Create a service account that the Smile CDR application will run under sudo adduser --system --no-create-home --disabled-login --group smile Extract the archive # Navigate to the directory you wish to install to cd /opt/ # Extract the Downloaded Archive sudo tar xf /path/to/smilecdr-2021.05.PRE # Reassign the install directory to the smile user sudo chown -R smile:smile smilecdr Navigate to the smilecdr directory $ cd smilecdr You will now see the following directories in your target folder: bin/ \u2013 contains the script used to start and stop Smile CDR's server process classes/ \u2013 contains configuration files lib/ \u2013 contains the application itself (you should not need to interact with this directory)","title":"Install"},{"location":"in/installing-smile/#installing-smile-cdr","text":"Smile CDR can be deployed to a server as an application by extracting the Smile CDR application archive file or as a Docker service by importing the Smile CDR Docker image. Once deployed, the initial installation of Smile CDR should be as simple as editing the configuration file and starting the software. We believe that software should be easy to configure, and should come with sane configuration out-of-the-box. The following sections will provide a general overview of the basic installation process along with details for deploying Smile CDR as an application. Additional details about deploying Smile CDR as a Docker service are available at this page.","title":"Installing Smile CDR"},{"location":"in/installing-smile/#installing-to-linux-osx","text":"The following instructions will focus on deploying the software in a Linux/OSX environment. Create a service account that the Smile CDR application will run under sudo adduser --system --no-create-home --disabled-login --group smile Extract the archive # Navigate to the directory you wish to install to cd /opt/ # Extract the Downloaded Archive sudo tar xf /path/to/smilecdr-2021.05.PRE # Reassign the install directory to the smile user sudo chown -R smile:smile smilecdr Navigate to the smilecdr directory $ cd smilecdr You will now see the following directories in your target folder: bin/ \u2013 contains the script used to start and stop Smile CDR's server process classes/ \u2013 contains configuration files lib/ \u2013 contains the application itself (you should not need to interact with this directory)","title":"Installing to Linux / OSX"},{"location":"ps/ps-script/","text":"PSvox Player et PSscript If your documentation is related to source code, Material for MkDocs provides the ability to display information to the project's repository as part of the static site, including statistics like stars and forks. Furthermore, individual documents can be linked to specific source files. PSvox Player Consultez les rapports vocaux \u00e0 des fins de transcription. Cet opus de la gamme Postscriptum permet : Le r\u00e9glage de la vitesse de lecture sans distorsion de la voix ; Quatre niveaux de priorit\u00e9s ; Des dict\u00e9es assign\u00e9es selon les sp\u00e9cialit\u00e9s aux transcripteurs ; Des listes de travail personnelles ; L\u2019acc\u00e8s aux commentaires laiss\u00e9s par les m\u00e9decins au sujet du travail en cours ou des amendements de travaux ant\u00e9rieurs ; Un contr\u00f4le avanc\u00e9 de l\u2019\u00e9coute avec un p\u00e9dalier, lib\u00e9rant les mains pour le travail sur clavier. Synchronis\u00e9 et parfaitement int\u00e9gr\u00e9 \u00e0 PSscript, PSvox Player est con\u00e7u pour un processus de dict\u00e9e-transcription sans faille. PSscript Extension sp\u00e9cialis\u00e9e de Microsoft Word\u2122 pour la transcription de rapport m\u00e9dical, PSscript met \u00e0 votre disposition diff\u00e9rents outils afin de pr\u00e9venir les erreurs humaines : Mod\u00e8les personalis\u00e9s permettant le chargement automatique d\u2019informations provenant des autres syst\u00e8mes de votre \u00e9tablissement, tel que l\u2019index patient, le syst\u00e8me de radiologie et de laboratoire ; Textes standards personnalis\u00e9s ; Protocoles types personnalis\u00e9s ; Dictionnaires m\u00e9dicaux personnalis\u00e9s ; Corrections automatiques. PSscript est con\u00e7u de mani\u00e8re \u00e0 optimiser les interactions entre les utilisateurs du syst\u00e8me gr\u00e2ce \u00e0 l\u2019ajout de marqueurs et de commentaires. La signature des rapports est facilit\u00e9e par les listes de signatures et les commentaires ajout\u00e9s par les secr\u00e9taires lors de la transcription. Les rapports r\u00e9alis\u00e9s par des m\u00e9decins r\u00e9sidents peuvent \u00eatre valid\u00e9s par un m\u00e9decin superviseur avant leur envoi. Toutes les fonctions Word sont accessibles, sans exception. La transcription n\u2019a jamais \u00e9t\u00e9 aussi simple.","title":"PSscript"},{"location":"ps/ps-script/#psvox-player-et-psscript","text":"If your documentation is related to source code, Material for MkDocs provides the ability to display information to the project's repository as part of the static site, including statistics like stars and forks. Furthermore, individual documents can be linked to specific source files.","title":"PSvox Player et PSscript"},{"location":"ps/ps-script/#psvox-player","text":"Consultez les rapports vocaux \u00e0 des fins de transcription. Cet opus de la gamme Postscriptum permet : Le r\u00e9glage de la vitesse de lecture sans distorsion de la voix ; Quatre niveaux de priorit\u00e9s ; Des dict\u00e9es assign\u00e9es selon les sp\u00e9cialit\u00e9s aux transcripteurs ; Des listes de travail personnelles ; L\u2019acc\u00e8s aux commentaires laiss\u00e9s par les m\u00e9decins au sujet du travail en cours ou des amendements de travaux ant\u00e9rieurs ; Un contr\u00f4le avanc\u00e9 de l\u2019\u00e9coute avec un p\u00e9dalier, lib\u00e9rant les mains pour le travail sur clavier. Synchronis\u00e9 et parfaitement int\u00e9gr\u00e9 \u00e0 PSscript, PSvox Player est con\u00e7u pour un processus de dict\u00e9e-transcription sans faille.","title":"PSvox Player"},{"location":"ps/ps-script/#psscript","text":"Extension sp\u00e9cialis\u00e9e de Microsoft Word\u2122 pour la transcription de rapport m\u00e9dical, PSscript met \u00e0 votre disposition diff\u00e9rents outils afin de pr\u00e9venir les erreurs humaines : Mod\u00e8les personalis\u00e9s permettant le chargement automatique d\u2019informations provenant des autres syst\u00e8mes de votre \u00e9tablissement, tel que l\u2019index patient, le syst\u00e8me de radiologie et de laboratoire ; Textes standards personnalis\u00e9s ; Protocoles types personnalis\u00e9s ; Dictionnaires m\u00e9dicaux personnalis\u00e9s ; Corrections automatiques. PSscript est con\u00e7u de mani\u00e8re \u00e0 optimiser les interactions entre les utilisateurs du syst\u00e8me gr\u00e2ce \u00e0 l\u2019ajout de marqueurs et de commentaires. La signature des rapports est facilit\u00e9e par les listes de signatures et les commentaires ajout\u00e9s par les secr\u00e9taires lors de la transcription. Les rapports r\u00e9alis\u00e9s par des m\u00e9decins r\u00e9sidents peuvent \u00eatre valid\u00e9s par un m\u00e9decin superviseur avant leur envoi. Toutes les fonctions Word sont accessibles, sans exception. La transcription n\u2019a jamais \u00e9t\u00e9 aussi simple.","title":"PSscript"},{"location":"ps/ps-voxpc/","text":"Adding a git repository If your documentation is related to source code, Material for MkDocs provides the ability to display information to the project's repository as part of the static site, including statistics like stars and forks. Furthermore, individual documents can be linked to specific source files. Configuration In order to display a link to the repository of your project as part of your documentation, set repo_url in mkdocs.yml to the public URL of your repository, e.g.: repo_url: https://github.com/squidfunk/mkdocs-material The link to the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is automatically requested and rendered for public repositories . Repository name :octicons-file-code-24: Source \u00b7 :octicons-milestone-24: Default: automatically set to GitHub , GitLab or Bitbucket MkDocs will infer the source provider by examining the URL and try to set the repository name automatically. If you wish to customize the name, set repo_name in mkdocs.yml : repo_name: squidfunk/mkdocs-material Repository icon :octicons-file-code-24: Source \u00b7 :octicons-milestone-24: Default: fontawesome/brands/git-alt While the default repository icon is a generic git icon, it can be set to any icon bundled with the theme by referencing a valid icon path in mkdocs.yml : theme: icon: repo: fontawesome/brands/git-alt Some popular choices: :fontawesome-brands-git: \u2013 fontawesome/brands/git :fontawesome-brands-git-alt: \u2013 fontawesome/brands/git-alt :fontawesome-brands-git-square: \u2013 fontawesome/brands/git-square :fontawesome-brands-github: \u2013 fontawesome/brands/github :fontawesome-brands-github-alt: \u2013 fontawesome/brands/github-alt :fontawesome-brands-github-square: \u2013 fontawesome/brands/github-square :fontawesome-brands-gitlab: \u2013 fontawesome/brands/gitlab :fontawesome-brands-gitkraken: \u2013 fontawesome/brands/gitkraken :fontawesome-brands-bitbucket: \u2013 fontawesome/brands/bitbucket :fontawesome-solid-trash: \u2013 fontawesome/solid/trash","title":"PSvox PC"},{"location":"ps/ps-voxpc/#adding-a-git-repository","text":"If your documentation is related to source code, Material for MkDocs provides the ability to display information to the project's repository as part of the static site, including statistics like stars and forks. Furthermore, individual documents can be linked to specific source files.","title":"Adding a git repository"},{"location":"ps/ps-voxpc/#configuration","text":"In order to display a link to the repository of your project as part of your documentation, set repo_url in mkdocs.yml to the public URL of your repository, e.g.: repo_url: https://github.com/squidfunk/mkdocs-material The link to the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is automatically requested and rendered for public repositories .","title":"Configuration"},{"location":"ps/ps-voxpc/#repository-name","text":":octicons-file-code-24: Source \u00b7 :octicons-milestone-24: Default: automatically set to GitHub , GitLab or Bitbucket MkDocs will infer the source provider by examining the URL and try to set the repository name automatically. If you wish to customize the name, set repo_name in mkdocs.yml : repo_name: squidfunk/mkdocs-material","title":"Repository name"},{"location":"ps/ps-voxpc/#repository-icon","text":":octicons-file-code-24: Source \u00b7 :octicons-milestone-24: Default: fontawesome/brands/git-alt While the default repository icon is a generic git icon, it can be set to any icon bundled with the theme by referencing a valid icon path in mkdocs.yml : theme: icon: repo: fontawesome/brands/git-alt Some popular choices: :fontawesome-brands-git: \u2013 fontawesome/brands/git :fontawesome-brands-git-alt: \u2013 fontawesome/brands/git-alt :fontawesome-brands-git-square: \u2013 fontawesome/brands/git-square :fontawesome-brands-github: \u2013 fontawesome/brands/github :fontawesome-brands-github-alt: \u2013 fontawesome/brands/github-alt :fontawesome-brands-github-square: \u2013 fontawesome/brands/github-square :fontawesome-brands-gitlab: \u2013 fontawesome/brands/gitlab :fontawesome-brands-gitkraken: \u2013 fontawesome/brands/gitkraken :fontawesome-brands-bitbucket: \u2013 fontawesome/brands/bitbucket :fontawesome-solid-trash: \u2013 fontawesome/solid/trash","title":"Repository icon"}]}